// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id         String    @id @default(uuid())
  user_id    String    @unique // Clerk ID
  fullName   String
  email      String    @unique
  created_at DateTime  @default(now())
  customer_id String?  // Razorpay customer ID
  price_id   String?
  status     UserStatus @default(ACTIVE)
  
  // Relations
  posts      Post[]
  payments   Payment[]

  @@map("users")
}

model Post {
  id         String   @id @default(uuid())
  user_id    String
  title      String
  content    String
  created_at DateTime @default(now())
  
  // Relations
  user       User     @relation(fields: [user_id], references: [user_id])

  @@map("posts")
}

model Payment {
  id                  String    @id @default(uuid())
  amount              Float
  status              PaymentStatus
  razorpay_payment_id String?   @unique
  created_at          DateTime  @default(now())
  refunded_at         DateTime?
  user_email          String
  price_id            String
  
  // Relations  
  user                User      @relation(fields: [user_email], references: [email])

  @@map("payments")
}

enum UserStatus {
  ACTIVE
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}